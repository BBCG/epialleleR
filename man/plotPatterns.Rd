% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotPatterns.R
\name{plotPatterns}
\alias{plotPatterns}
\title{plotPatterns}
\usage{
plotPatterns(
  patterns,
  order.by = c("beta", "count"),
  beta.range = c(0, 1),
  bin.context = c("CG", "CHG", "CHH", "CxG", "CX"),
  nbins = 10,
  npatterns.per.bin = 2,
  plot.context = c("CG", "CHG", "CHH", "CxG", "CX"),
  genomic.scale = c("continuous", "discrete"),
  breaks = "auto",
  marginal = c("density", "count"),
  marginal.position = c("left", "right"),
  marginal.transform = c("identity", "log10"),
  marginal.limits = NULL,
  marginal.size = 0.25,
  ...,
  tag = c("none", "count", "beta", "pattern"),
  tag.size = 2.5,
  tag.color = "#87654c",
  tag.fill = "lemonchiffon",
  title = TRUE,
  subtitle = TRUE,
  context.size = c(1, 2, 3),
  base.size = 3,
  colors = c("grey97", "grey10"),
  plot = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{patterns}{output of \code{\link[epialleleR]{preprocessBam}} function
(methylation patterns as a \code{\link[data.table]{data.table}} object).}

\item{order.by}{}
}
\description{
This convenience function plots methylation patterns (epialleles) previously
extracted by \code{\link[epialleleR]{extractPatterns}}.
}
\details{
As the number of methylation patterns can be quite large, by default, the
function plots \strong{the most abundant unique patterns} only. The complete
logic is as follows:
\itemize{
  \item from the input methylation patterns, all unique patterns are
  extracted and counted
  \item unique patterns are split in bins by their average beta value
  \item most abundant unique methylation patterns from each bin are plotted
  and silently returned
}
}
\examples{
  # amplicon data
  amplicon.bam <- system.file("extdata", "amplicon010meth.bam",
                              package="epialleleR")
  custom.range <- as("chr17:43124861-43125150", "GRanges")
  
  # let's get our patterns
  patterns <- extractPatterns(bam=amplicon.bam, bed=custom.range)
  
  # default plot + silently returned plotted patterns
  selected.patterns <- plotPatterns(patterns)
  
  # all unique patterns with their counts as a margin, categorical positions,
  # tagged with pattern IDs, returned as a `gtable` object
  tbl <- plotPatterns(patterns, npatterns.per.bin=Inf, marginal="count",
                      genomic.scale="discrete", tag="pattern", plot=FALSE)
  
  # which can be plotted later
  grid::grid.newpage()
  grid::grid.draw(tbl)
  
}
\seealso{
\code{\link{extractPatterns}} for extracting methylation patterns,
\code{\link{preprocessBam}} for preloading BAM data,
\code{\link{generateCytosineReport}} for methylation statistics at the level
of individual cytosines, \code{\link{generateBedReport}} for genomic
region-based statistics, \code{\link{generateVcfReport}} for evaluating
epiallele-SNV associations, \code{\link{generateBedEcdf}} for analysing the
distribution of per-read beta values, and `epialleleR` vignettes for the
description of usage and sample data.
}
