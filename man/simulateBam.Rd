% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulateBam.R
\name{simulateBam}
\alias{simulateBam}
\title{simulateBam}
\usage{
simulateBam(
  output.bam.file,
  qname = NULL,
  flag = NULL,
  rname = NULL,
  pos = NULL,
  mapq = NULL,
  cigar = NULL,
  rnext = NULL,
  pnext = NULL,
  tlen = NULL,
  seq = NULL,
  qual = NULL,
  ...,
  verbose = TRUE
)
}
\arguments{
\item{output.bam.file}{output BAM file location string.}

\item{qname}{character vector of query names. When default (NULL), names
like "q0001".."qnnnn" will be assigned.}

\item{flag}{integer vector of bitwise flags (a combination of the BAM_F*
constants). When default (NULL), zero (unique, valid, single-end, aligned
read) is assigned for every record.}

\item{rname}{character vector of chromosome (reference) names. When default
(NULL), "chrS" is assigned for every record.}

\item{pos}{integer vector of 1-based leftmost coordinates of the querys.
When default (NULL), zero is assigned for every record.}

\item{mapq}{integer vector of mapping qualities. When default (NULL),
60 is assigned for every record.}

\item{cigar}{character vector of CIGAR strings. When default (NULL),
"lM" is assigned for every record, where `l` is the length of the query
(`seq`).}

\item{rnext}{character vector of chromosome (reference) names for next read
in template. When default (NULL), "chrS" is assigned for every record.}

\item{pnext}{integer vector of 1-based leftmost coordinates of next read in
template. When default (NULL), zero is assigned for every record.}

\item{tlen}{integer vector of observed template lengths. When default
(NULL), the length of the corresponding query (`seq`)
is assigned for every record.}

\item{seq}{character vector of query sequence. When default (NULL),
random sequence is assigned.
The length of this random sequence equals to the `tlen` parameter
(if defined), or the length of the `XM` optional parameter (if supplied).
If none of these parameters is supplied, length of every `seq` will equal 10.}

\item{qual}{query sequence quality string (ASCII of base QUALity plus 33).
When default (NULL), quality of every base is assigned to "F" (QUALity
of 47 + 33). The length of this quality string equals to the length of the
corresponding query (`seq`) for every record.}

\item{...}{optional tags to add to the records, in the form `tag=value`.
Can be either integer vector (e.g., for "NM" tag),
or character vector (e.g., "XM" tag for methylation call string,
"XG"/"YC" tag for reference strand read was aligned to).}

\item{verbose}{boolean to report progress and timings (default: TRUE).}
}
\value{
number of records written to the output BAM.
}
\description{
This function creates sample BAM files given mandatory and optional BAM
fields.
}
\details{
The function creates sample alignment records and saves them in BAM file.
Output can be used to test epialleleR methods as well as other
tools for methylation analysis. This method can significantly simplify
calculation of methylation metrics on example data (beta, VEF, and WTF
values of epialleleR; methylation heterogeneity metrics of other tools).

The number of records written will be equal to the largest length of any
supplied (nondefault) parameter or 1 if no parameters were supplied.
If lengths of supplied parameters differ,
shorter vectors will be recycled (a whole number of times or with remainder
if necessary).
}
\examples{
  out.bam <- tempfile(pattern="simulated", fileext=".bam")
  simulateBam(
    output.bam.file=out.bam,
    pos=c(1, 2),
    XM=c("ZZZzzZZZ", "ZZzzzzZZ"),
    XG=c("CT", "AG")
  )
  generateCytosineReport(out.bam, threshold.reads=FALSE)
}
\seealso{
\code{\link{generateCytosineReport}} and
\code{\link{generateWtfReport}} for methylation reports, as well as
`epialleleR` vignettes for the description of usage and sample data.

\href{https://www.htslib.org/}{Samtools} for viewing BAM files.
\href{http://samtools.github.io/hts-specs/SAMv1.pdf}{SAMv1} file format
specifications. Specifications of
\href{https://samtools.github.io/hts-specs/SAMtags.pdf}{optional SAM tags}.
\href{https://doi.org/10.1371/journal.pcbi.1010946}{metheor} for ultrafast
DNA methylation heterogeneity calculation from bisulfite alignments.
}
